# Compilation of the workflow is quite involved, so an explanation is provided here.

# The first step is to convert the figure tags into figure numbers. This is because
# markdown doesn't have particularly good support for figure labelling - at least,
# not in a flexible manner that works for both LaTeX and HTML. Instead, we hard-code
# the figure numbers into the markdown text, so that it makes sense in all downstream
# applications. Figure numbers are also hardcoded into the captions, which means that
# you need to specify empty captions within LaTeX.

cd markdown
./refigure.sh
cd -

# The second step is to compile the R markdown file. This is done with some care, 
# given that the workflow is quite long. The script below will save the output upon 
# errors in compilation, and generate a new *.Rmd file that picks up from the chunk
# containing the error. This means that you can fix the bug and keep going, rather 
# than restarting the entire workflow from the beginning (which is useful for testing). 
# This generates a markdown file along with pictures and stuff.

cd markdown
Rscript compile.R workflow
cd -

# The next step is to convert the markdown into a format of choice. Here, we convert
# it to HTML using render(), but it's also possible to convert to TeX via pandoc. This
# is done using the 'toTex' script, which adds the necessary preamble for F1000Research.

cd converted
cp ../markdown/workflow.md .
rsync -azv --delete ../markdown/figure . --exclude=".svn"
R -e "rmarkdown::render('workflow.md')"

./toTex.sh
cd -

# We also need to convert the R markdown into something that BioC can compile.
# This involves flipping the align flag to FALSE, as we're starting off from
# the BAM files. The BioC build system doesn't have the command line utilities we need.

cat markdown/workflow.Rmd | sed "s/biocbuild <- FALSE/biocbuild <- TRUE/" > bioC/chipseq_db.Rmd
cp converted/ref.bib bioC
